{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","addGood","good","setState","includes","filter","element","concat","clear","this","title","length","slice","join","className","classNames","type","onClick","map","active","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAMIC,E,4MACJC,MAAe,CACbC,aAAc,CAAC,Q,EAGjBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACJ,GAAD,OACZA,EAAMC,aAAaI,SAASF,GACxB,CACAF,aAAcD,EAAMC,aAAaK,QAC/B,SAAAC,GAAO,OAAIA,IAAYJ,MAGzB,CAAEF,aAAcD,EAAMC,aAAaO,OAAOL,Q,EAIlDM,MAAQ,WACN,EAAKL,SAAS,CAAEH,aAAc,M,4CAGhC,WAAU,IAAD,OACCA,EAAiBS,KAAKV,MAAtBC,aACJU,EAAQ,oBAQZ,OAN4B,IAAxBV,EAAaW,OACfD,EAAK,UAAMV,EAAa,GAAnB,gBACIA,EAAaW,OAAS,IAC/BD,EAAK,UAAMV,EAAaY,MAAM,GAAI,GAAGC,KAAK,MAArC,gBAAkDb,EAAaA,EAAaW,OAAS,GAArF,kBAIL,sBAAKG,UAAU,MAAf,UACE,+BACGJ,EACA,IACD,wBACEI,UACEC,IACE,SACA,eACA,CAAE,gBAAyC,IAAxBf,EAAaW,SAGpCK,KAAK,SACLC,QAASR,KAAKD,MAThB,sBAcF,oBAAIM,UAAU,OAAd,SACGjB,EAAgBqB,KAAI,SAAAhB,GAAI,OACvB,sBACEY,UACEC,IACE,UACA,CAAEI,OAAQnB,EAAaI,SAASF,KAJtC,UAQE,oBACEY,UACEC,IACE,aACA,CAAEI,OAAQnB,EAAaI,SAASF,KAJtC,SASGA,GAFIA,GAIP,wBACEY,UAAU,SACVE,KAAK,SACLC,QAAS,WACP,EAAKhB,QAAQC,IAJjB,SAOGF,EAAaI,SAASF,GAAQ,SAAW,uB,GA9ExCkB,IAAMC,WAwFTvB,ICzGfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.51e9fc85.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[],\n};\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: ['Jam'],\n  };\n\n  addGood = (good:string) => {\n    this.setState((state) => (\n      state.selectedGood.includes(good)\n        ? {\n          selectedGood: state.selectedGood.filter(\n            element => element !== good,\n          ),\n        }\n        : { selectedGood: state.selectedGood.concat(good) }\n    ));\n  };\n\n  clear = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    let title = 'No goods selected';\n\n    if (selectedGood.length === 1) {\n      title = `${selectedGood[0]} is selected`;\n    } else if (selectedGood.length > 1) {\n      title = `${selectedGood.slice(0, -1).join(', ')} and ${selectedGood[selectedGood.length - 1]} are selected`;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {title}\n          {' '}\n          <button\n            className={\n              classNames(\n                'button',\n                'button-clear',\n                { 'button-hidden': selectedGood.length === 0 },\n              )\n            }\n            type=\"button\"\n            onClick={this.clear}\n          >\n            Clear\n          </button>\n        </h1>\n        <ul className=\"list\">\n          {goodsFromServer.map(good => (\n            <div\n              className={\n                classNames(\n                  'wrapper',\n                  { active: selectedGood.includes(good) },\n                )\n              }\n            >\n              <li\n                className={\n                  classNames(\n                    'list__item',\n                    { active: selectedGood.includes(good) },\n                  )\n                }\n                key={good}\n              >\n                {good}\n              </li>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  this.addGood(good);\n                }}\n              >\n                {selectedGood.includes(good) ? 'Remove' : 'Add'}\n\n              </button>\n            </div>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}